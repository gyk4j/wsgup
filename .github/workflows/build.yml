name: CI build

on:
  workflow_dispatch:
  # push:
    # branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: ubuntu-latest
    env:
      Configuration: Release
    
    steps:
      - name: Prepare upload artifact
        id: prepare-upload-artifact
        run: mkdir -p /tmp/upload
      
      - name: Cache cjson
        id: cache-cjson
        uses: actions/cache@v4
        env:
          cache-name: cache-cjson
        with:
          path: /tmp/cjson
          key: ${{ runner.os }}-build-${{ env.cache-name }}
        
      - if: ${{ steps.cache-cjson.outputs.cache-hit != 'true' }}
        name: Download cJSON
        uses: actions/checkout@v4
        with:
          github-server-url: 'https://github.com'
          repository: 'DaveGamble/cJSON'
          sparse-checkout: |
            cJSON.c
            cJSON.h
        continue-on-error: false
      
      - if: ${{ steps.cache-cjson.outputs.cache-hit != 'true' }}
        name: Check dependencies
        run: |
          mkdir /tmp/cjson
          cp cJSON.* /tmp/cjson
        
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build C
        run: |
          cd $GITHUB_WORKSPACE/c/wsgup
          cp /tmp/cjson/cJSON.c src/
          cp /tmp/cjson/cJSON.h include/
          cmake -B build .
          cmake --build build
          cp build/wsgup /tmp/upload/wsgup-c
        env:
          Configuration: ${{ matrix.configuration }}
          
      - name: "Build C#"
        run: |
          cd $GITHUB_WORKSPACE/csharp/wsgup
          dotnet build -c Release
          cp bin/Release/netcoreapp3.0/wsgup.exe /tmp/upload/wsgup-csharp.exe 
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wreck
          path: /tmp/upload
          if-no-files-found: error
          retention-days: 1
    